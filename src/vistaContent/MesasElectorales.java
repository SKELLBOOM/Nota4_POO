package vistaContent;

import SistemaContarVotos.Eleccion;
import SistemaContarVotos.GestionElecciones;
import SistemaContarVotos.GestionMesas;
import SistemaContarVotos.MesaElectoral;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class MesasElectorales extends javax.swing.JPanel {

    private GestionMesas gestorMesas = new GestionMesas(100);
    private GestionElecciones gestorElecciones = new GestionElecciones(100);
    private Eleccion[] eleccionesDisponibles;

    /**
     * Creates new form Partidos
     */
    public MesasElectorales(GestionMesas gestorMesas, GestionElecciones gestorElecciones) {
        initComponents();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"Codigo", "Lugar", "nroVotantes", "Elecciones"});
        tablaMesas.setModel(modelo);
        this.gestorMesas = gestorMesas;
        this.gestorElecciones = gestorElecciones;

        cargarEleccionesDisponibles();
    }

    private void cargarEleccionesDisponibles() {
        eleccionesDisponibles = gestorElecciones.getElecciones();
        comboElecciones.removeAllItems();

        for (Eleccion e : eleccionesDisponibles) {
            comboElecciones.addItem(e.getTipo() + " - " + e.getFecha());
        }
    }

    private void cargarTablaMesas() {
        DefaultTableModel modelo = (DefaultTableModel) tablaMesas.getModel();
        modelo.setRowCount(0); //

        MesaElectoral[] mesas = gestorMesas.getMesas();
        for (MesaElectoral m : mesas) {
            if (m != null) {
                modelo.addRow(new Object[]{
                    m.getIdMesa(),
                    m.getLugar(),
                    m.getContadorMiembros(),
                    m.getEleccion().getTipo() + " - " + m.getEleccion().getFecha()
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMesas = new javax.swing.JTable();
        txtCodigo = new javax.swing.JLabel();
        txtIngresarCodigo = new javax.swing.JTextField();
        txtMesasElectorales = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        txtregistrarunpartido = new javax.swing.JLabel();
        txtDigitarlugar = new javax.swing.JTextField();
        txtLugar = new javax.swing.JLabel();
        txtVontantes = new javax.swing.JLabel();
        txtDigitarVotantes = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        comboElecciones = new javax.swing.JComboBox<>();
        btnAsignarMiembro = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(550, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setEnabled(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaMesas.setBackground(new java.awt.Color(255, 255, 255));
        tablaMesas.setForeground(new java.awt.Color(0, 0, 0));
        tablaMesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Lugar", "nroVotantes", "Elecciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaMesas);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 62, 313, 224));

        txtCodigo.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(0, 0, 0));
        txtCodigo.setText("Codigo");
        jPanel1.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 82, -1, -1));

        txtIngresarCodigo.setBackground(new java.awt.Color(255, 255, 255));
        txtIngresarCodigo.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtIngresarCodigo.setForeground(new java.awt.Color(204, 204, 204));
        txtIngresarCodigo.setText("Ingrese Codigo");
        txtIngresarCodigo.setBorder(null);
        txtIngresarCodigo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtIngresarCodigoMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIngresarCodigoMousePressed(evt);
            }
        });
        txtIngresarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIngresarCodigoActionPerformed(evt);
            }
        });
        jPanel1.add(txtIngresarCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 105, 184, 20));

        txtMesasElectorales.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtMesasElectorales.setForeground(new java.awt.Color(0, 0, 0));
        txtMesasElectorales.setText("Elecciones");
        jPanel1.add(txtMesasElectorales, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, -1, -1));

        btnEliminar.setBackground(new java.awt.Color(255, 0, 51));
        btnEliminar.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.setBorderPainted(false);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 309, 85, 23));

        btnAgregar.setBackground(new java.awt.Color(255, 0, 51));
        btnAgregar.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.setBorder(null);
        btnAgregar.setBorderPainted(false);
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 85, 23));

        txtregistrarunpartido.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        txtregistrarunpartido.setForeground(new java.awt.Color(0, 0, 0));
        txtregistrarunpartido.setText("REGISTRAR MESA ELECTORAL");
        jPanel1.add(txtregistrarunpartido, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 27, -1, -1));

        txtDigitarlugar.setBackground(new java.awt.Color(255, 255, 255));
        txtDigitarlugar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtDigitarlugar.setForeground(new java.awt.Color(204, 204, 204));
        txtDigitarlugar.setText("Digite el lugar");
        txtDigitarlugar.setBorder(null);
        txtDigitarlugar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtDigitarlugarMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDigitarlugarMousePressed(evt);
            }
        });
        txtDigitarlugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDigitarlugarActionPerformed(evt);
            }
        });
        jPanel1.add(txtDigitarlugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 184, 20));

        txtLugar.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtLugar.setForeground(new java.awt.Color(0, 0, 0));
        txtLugar.setText("Lugar");
        jPanel1.add(txtLugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 147, -1, -1));

        txtVontantes.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtVontantes.setForeground(new java.awt.Color(0, 0, 0));
        txtVontantes.setText("Votantes");
        jPanel1.add(txtVontantes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 212, -1, -1));

        txtDigitarVotantes.setBackground(new java.awt.Color(255, 255, 255));
        txtDigitarVotantes.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtDigitarVotantes.setForeground(new java.awt.Color(204, 204, 204));
        txtDigitarVotantes.setText("Votantes");
        txtDigitarVotantes.setBorder(null);
        txtDigitarVotantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtDigitarVotantesMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDigitarVotantesMousePressed(evt);
            }
        });
        txtDigitarVotantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDigitarVotantesActionPerformed(evt);
            }
        });
        jPanel1.add(txtDigitarVotantes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 241, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 131, 184, 10));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 196, 184, 10));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 264, 184, 10));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 338, 184, 10));

        comboElecciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(comboElecciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, -1, -1));

        btnAsignarMiembro.setBackground(new java.awt.Color(255, 0, 51));
        btnAsignarMiembro.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        btnAsignarMiembro.setForeground(new java.awt.Color(255, 255, 255));
        btnAsignarMiembro.setText("Asignar Miembro");
        btnAsignarMiembro.setBorder(null);
        btnAsignarMiembro.setBorderPainted(false);
        btnAsignarMiembro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAsignarMiembro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarMiembroActionPerformed(evt);
            }
        });
        jPanel1.add(btnAsignarMiembro, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 110, 23));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDigitarlugarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDigitarlugarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDigitarlugarMouseEntered

    private void txtDigitarlugarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDigitarlugarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDigitarlugarMousePressed

    private void txtDigitarlugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDigitarlugarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDigitarlugarActionPerformed

    private void txtIngresarCodigoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIngresarCodigoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIngresarCodigoMouseEntered

    private void txtIngresarCodigoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIngresarCodigoMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIngresarCodigoMousePressed

    private void txtIngresarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIngresarCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIngresarCodigoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String codigo = txtIngresarCodigo.getText();
        String lugar = txtDigitarlugar.getText();
        int votantes;

        try {
            votantes = Integer.parseInt(txtDigitarVotantes.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Votantes debe ser un número.");
            return;
        }

        int indice = comboElecciones.getSelectedIndex();
        Eleccion eleccionSeleccionada = (indice >= 0) ? eleccionesDisponibles[indice] : null;

        if (codigo.isEmpty() || lugar.isEmpty() || eleccionSeleccionada == null) {
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.");
            return;
        }

        MesaElectoral nueva = new MesaElectoral(lugar, codigo, votantes, eleccionSeleccionada);
        boolean registrado = gestorMesas.agregarMesa(nueva);

        if (registrado) {
            cargarTablaMesas();
            txtIngresarCodigo.setText("");
            txtDigitarlugar.setText("");
            txtDigitarVotantes.setText("");
            comboElecciones.setSelectedIndex(-1);

        } else {
            JOptionPane.showMessageDialog(this, "Capacidad máxima alcanzada.");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = tablaMesas.getSelectedRow();

        if (filaSeleccionada >= 0) {
            int confirm = JOptionPane.showConfirmDialog(this,
                    "¿Estás seguro de eliminar la mesa seleccionada?",
                    "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                boolean eliminado = gestorMesas.eliminarMesa(filaSeleccionada);

                if (eliminado) {
                    cargarTablaMesas();
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar la mesa del arreglo.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtDigitarVotantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDigitarVotantesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDigitarVotantesActionPerformed

    private void txtDigitarVotantesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDigitarVotantesMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDigitarVotantesMousePressed

    private void txtDigitarVotantesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDigitarVotantesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDigitarVotantesMouseEntered

    private void btnAsignarMiembroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarMiembroActionPerformed
        int fila = tablaMesas.getSelectedRow();
        if (fila >= 0) {
            String idMesa = (String) tablaMesas.getValueAt(fila, 0); // ID en primera columna
            MesaElectoral mesaSeleccionada = null;

            for (MesaElectoral m : gestorMesas.getMesas()) {
                if (m != null && m.getIdMesa().equals(idMesa)) {
                    mesaSeleccionada = m;
                    break;
                }
            }

            if (mesaSeleccionada != null) {
                javax.swing.JFrame ventana = new javax.swing.JFrame("Miembros de Mesa");
                ventana.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
                ventana.getContentPane().add(new MiembrosMesa(gestorMesas, mesaSeleccionada));
                ventana.setSize(600, 400);
                ventana.setLocationRelativeTo(null);
                ventana.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Mesa no encontrada.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una mesa para asignar miembros.");
        }
    }//GEN-LAST:event_btnAsignarMiembroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAsignarMiembro;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> comboElecciones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable tablaMesas;
    private javax.swing.JLabel txtCodigo;
    private javax.swing.JTextField txtDigitarVotantes;
    private javax.swing.JTextField txtDigitarlugar;
    private javax.swing.JTextField txtIngresarCodigo;
    private javax.swing.JLabel txtLugar;
    private javax.swing.JLabel txtMesasElectorales;
    private javax.swing.JLabel txtVontantes;
    private javax.swing.JLabel txtregistrarunpartido;
    // End of variables declaration//GEN-END:variables
}
